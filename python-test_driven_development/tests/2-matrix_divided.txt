# doctest 2-matrix_divided.txt
======================
Using ``matrix_divided``
======================
-------------------

File: ``2-matrix_divided.py``
Import the function:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests to realize:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

    >>> matrix_divided([[6, 18, 5], ['a', 'b', 'c']], 4)
    Traceback (most recent call last):
                ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[2, 3], [4, 5, 6]], 2)
    Traceback (most recent call last):
                ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'hello')
    Traceback (most recent call last):
                ...
    TypeError: div must be a number

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
                ...
    ZeroDivisionError: division by zero

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3554e5455)
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> matrix_divided(['nan'], 5)
    Traceback (most recent call last):
                ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
                ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided()
    Traceback (most recent call last):
                ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'